openapi: 3.0.0
info:
  title: API Autenticazione OAuth2
  description: >
    Questa API utilizza il protocollo OAuth 2.0 per l'autenticazione e l'autorizzazione degli utenti.
  version: 1.0.0

servers:
  - url: https://api.example.com
    description: Server di produzione

paths:
  /oauth/authorize:
    post:
      summary: Inizia il processo di autorizzazione OAuth2
      description: |
        Endpoint per ottenere il codice di autorizzazione.
        **Nota:** Questo endpoint utilizza **GET** nella pratica standard OAuth2, 
        poiché i parametri vengono passati nella query string e la richiesta non modifica dati lato server.
      parameters:
        - name: response_type
          in: query
          required: true
          schema:
            type: string
            enum: [code]
          description: "Specifica il tipo di risposta richiesta. Tipicamente 'code' per Authorization Code Flow."
        - name: client_id
          in: query
          required: true
          schema:
            type: string
          description: "Identificativo univoco del client registrato."
        - name: redirect_uri
          in: query
          required: true
          schema:
            type: string
            format: uri
          description: "L'URI a cui verrà reindirizzato l'utente dopo l'autorizzazione. Deve corrispondere a un valore registrato."
        - name: scope
          in: query
          required: true
          schema:
            type: string
          description: "Permessi richiesti dall'applicazione. Devono essere separati da spazi."
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: "Parametro utilizzato per prevenire attacchi CSRF e mantenere il contesto della sessione."
      responses:
        "302":
          description: Redirect all'URI di callback con il codice di autorizzazione

  /oauth/token:
    post:
      summary: Ottiene un token di accesso e refresh token
      description: |
        Endpoint per scambiare il codice di autorizzazione con un token di accesso.
        **Nota:** Questo endpoint utilizza **POST**, poiché vengono inviati dati sensibili nel body della richiesta.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                [grant_type, client_id, client_secret, code, redirect_uri]
              properties:
                grant_type:
                  type: string
                  enum: [authorization_code]
                  description: "Tipo di grant richiesto. Deve essere 'authorization_code' per questo flusso."
                client_id:
                  type: string
                  description: "Identificativo univoco del client registrato."
                client_secret:
                  type: string
                  description: "Segreto del client per l'autenticazione. Non esporre mai questa informazione pubblicamente."
                code:
                  type: string
                  description: "Codice di autorizzazione ottenuto dall'endpoint /authorize."
                redirect_uri:
                  type: string
                  format: uri
                  description: "L'URI di reindirizzamento registrato usato nella richiesta iniziale."
      responses:
        "200":
          description: Token di accesso generato
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: "Bearer"
                  expires_in:
                    type: integer
                  refresh_token:
                    type: string

  /oauth/revoke:
    post:
      summary: Revoca un token attivo
      description: "Endpoint per invalidare un token di accesso o refresh token. Utilizza POST per sicurezza."
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required: [token]
              properties:
                token:
                  type: string
                  description: "Il token che deve essere revocato."
      responses:
        "200":
          description: Token revocato con successo

  /oauth/userinfo:
    get:
      summary: Recupera informazioni sull'utente autenticato
      description: "Restituisce le informazioni dell'utente basate sul token di accesso fornito."
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Informazioni sull'utente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
